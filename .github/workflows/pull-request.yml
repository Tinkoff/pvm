name: 'pull request'

on: pull_request

env:
  PVM_LL: silly

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  mark-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/setup
      - run: npm run build
      - run: npm exec pvm mark-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs-test:
    runs-on: ubuntu-latest
    container: mshipov/plantuml:1.0.4
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: ./.github/actions/build-docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./website/build

  perf-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: ./.github/actions/setup
      - run: npm run build
      - run: node scripts/perf/run.js --historyLength 2
      - run: node scripts/perf/create-report-comment.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/setup
      - uses: dorny/paths-filter@v2
        id: packageChanges
        with:
          filters: |
            changes:
              - 'packages/**'
              - 'test/**'
      - run: npm run build
      - run: npm run check-ts-strict
      - run: npm exec depscheck
      - run: npm run lint:config-schema
      - run: npm exec pvm vcs is-branch-actual
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm exec pvm lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm run lint
      - if: steps.packageChanges.outputs.changes == 'true'
        run: npm run test -- -w `node -p 'Math.min(os.cpus().length, 2)'`
        env:
          PVM_GITHUB_TEST_REPO_TOKEN: ${{ secrets.PVM_GITHUB_TEST_REPO_TOKEN }}
      - run: node scripts/github-test-repos-cleanup.js
        if: always()
        env:
          PVM_GITHUB_TEST_REPO_TOKEN: ${{ secrets.PVM_GITHUB_TEST_REPO_TOKEN }}

  publish-dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/setup
      - run: npm run build
      - run: npm exec pvm publish -- -s changed-since-release -S ref=HEAD --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-stale-dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/setup
      - run: npm run build
      - run: npm exec pvm publish -- -s stale --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/setup
      - run: npm run build
      - run: npm exec pvm update -- --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
