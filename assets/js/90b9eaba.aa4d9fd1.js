"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>v});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=l(n),v=r,u=d["".concat(s,".").concat(v)]||d[v]||c[v]||o;return n?a.createElement(u,i(i({ref:t},m),{},{components:n})):a.createElement(u,i({ref:t},m))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3476:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>p,contentTitle:()=>s,metadata:()=>l,toc:()=>m,default:()=>d});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],p={id:"pvm_pvm",title:"Module: @pvm/pvm",sidebar_label:"@pvm/pvm",sidebar_position:0,custom_edit_url:null},s="@pvm/pvm",l={unversionedId:"api/modules/pvm_pvm",id:"api/modules/pvm_pvm",isDocsHomePage:!1,title:"Module: @pvm/pvm",description:"Contains pvm cli entrypoint",source:"@site/docs/api/modules/pvm_pvm.md",sourceDirName:"api/modules",slug:"/api/modules/pvm_pvm",permalink:"/pvm/docs/api/modules/pvm_pvm",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"pvm_pvm",title:"Module: @pvm/pvm",sidebar_label:"@pvm/pvm",sidebar_position:0,custom_edit_url:null},sidebar:"API",previous:{title:"@pvm/plugin-http-proxy",permalink:"/pvm/docs/api/modules/pvm_plugin_http_proxy"},next:{title:"@pvm/releases",permalink:"/pvm/docs/api/modules/pvm_releases"}},m=[{value:"CLI",id:"cli",children:[],level:2},{value:"Functions",id:"functions",children:[{value:"getPackages",id:"getpackages",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2}],c={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pvmpvm"},"@pvm/pvm"),(0,o.kt)("p",null,"Contains pvm cli entrypoint"),(0,o.kt)("h2",{id:"cli"},"CLI"),(0,o.kt)("p",null,"For each subcommand help is also available (for example ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn pvm publish --help"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn run v1.22.19\n$ /__w/pvm/pvm/node_modules/.bin/pvm --help\npvm <command>\n\nCommands:\n  pvm lint                                 Checks that package versions correspond to the selected\n                                           settings and policies in the project.\n  pvm mark-pr                              Marks merge or pull request by project labels, packages\n                                           about to update, etc\n  pvm notes                                Create release notes for latest release tag based on\n                                           commit messages between tags\n  pvm packages                             Shows the list of packages by the specified criterion\n  pvm publish                              Publish packages to npm registry\n  pvm rewrite-notes                        Recalculate and rewrite release notes for particular\n                                           range of git tags\n  pvm set-versions <versionOrReleaseType>  Set given version for given packages\n  pvm show <command>                       show various information for repository\n  pvm sync-tag                             Extracts version from git tag and writes to package.json\n  pvm tojson                               convert text to json\n  pvm write-versions                       Replace stub versions in package.json's with actual one's\n                                           from versions file or from release tag. Alias for 'pvm\n                                           set-versions none -u -s all'\n  pvm update                               Update packages changed since last release\n                                                                                  [aliases: release]\n  pvm local <update>                       Enables local mode for the following command\n  pvm pkgset                               Shows the list of packages by the specified criterion\n                                           (low-level version)\n  pvm releases <command>                   Commands for working with ReleaseList artifact\n  pvm artifacts <command>                  Commands for working with pvm artifacts\n  pvm vcs <command>                        cli for version control system\n  pvm viz <files..>                        Graphviz pvm cli wrapper\n  pvm files                                Output files by glob in the list of packages (packages\n                                           are choosing by pkgset strategies logic)\n  pvm changelog <command>                  Commands for working with Changelog artifacts\n  pvm add-tag                              Creates a new release tag via GitLab API based on commits\n                                           made after the last release tag\n  pvm notification <command>               Send messages to messenger(s)\n  pvm help <subcommand>                    Get help for subcommand\n\nOptions:\n  --version  Show version number                                                           [boolean]\n  --help     Show help                                                                     [boolean]\nDone in 1.68s.\n\n")),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"getpackages"},"getPackages"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"getPackages"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"type?"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,o.kt)("a",{parentName:"p",href:"../classes/pvm_core.Pkg"},(0,o.kt)("inlineCode",{parentName:"a"},"Pkg")),"[]",">"),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"type")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"PackagesType")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"'all'"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"opts")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"GetPackagesOptions")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"{}"))))),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,o.kt)("a",{parentName:"p",href:"../classes/pvm_core.Pkg"},(0,o.kt)("inlineCode",{parentName:"a"},"Pkg")),"[]",">"),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/src/plugins/core/packages.ts#L22"},"src/plugins/core/packages.ts:22")))}d.isMDXComponent=!0}}]);