"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1796],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5013:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>s,toc:()=>p,default:()=>u});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={id:"glossary",title:"Glossary"},c=void 0,s={unversionedId:"book/glossary",id:"book/glossary",isDocsHomePage:!1,title:"Glossary",description:"Platform",source:"@site/docs/book/glossary.md",sourceDirName:"book",slug:"/book/glossary",permalink:"/pvm/docs/book/glossary",tags:[],version:"current",frontMatter:{id:"glossary",title:"Glossary"},sidebar:"book",previous:{title:"\u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f (WIP)",permalink:"/pvm/docs/book/updating/updating-process"}},p=[{value:"Platform",id:"platform",children:[],level:2},{value:"Locators",id:"locators",children:[{value:"Selectors by package path",id:"selectors-by-package-path",children:[],level:3},{value:"Package name Selectors",id:"package-name-selectors",children:[],level:3},{value:"Canary release",id:"canary-release",children:[],level:3},{value:"Canary index",id:"canary-index",children:[],level:3}],level:2}],m={toc:p};function u(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"platform"},"Platform"),(0,o.kt)("p",null,"Development platform."),(0,o.kt)("div",{className:"customAnchor anchor",id:"pkg-selector"}),(0,o.kt)("h2",{id:"locators"},"Locators"),(0,o.kt)("p",null,"\u0421The package selector is used in pvm settings to select groups of packages in a monorepository."),(0,o.kt)("p",null,"There are two kinds of selectors:"),(0,o.kt)("h3",{id:"selectors-by-package-path"},"Selectors by package path"),(0,o.kt)("p",null,"Must start with ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),". Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/src/core/**/*\n/src/utils/*\n")),(0,o.kt)("p",null,"For all the globbing features that you can use, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/micromatch/micromatch/tree/3.1.10#matching-features"},"here"),"."),(0,o.kt)("h3",{id:"package-name-selectors"},"Package name Selectors"),(0,o.kt)("p",null,"Must not start with ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),". Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"@pvm/*\n@pvm/pvm\n@pvm/core\n")),(0,o.kt)("p",null,"Globbing works on the same principles as in the case of paths, except for the option ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/micromatch/micromatch/tree/3.1.10#optionsbasename"},(0,o.kt)("inlineCode",{parentName:"a"},"basename")),"\n\u2013 it is included so that ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," matches packets with namespace: i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," will match all packages, even if they have a namespace."),(0,o.kt)("h3",{id:"canary-release"},"Canary release"),(0,o.kt)("p",null,"Release packages with a version like ",(0,o.kt)("inlineCode",{parentName:"p"},"1.1.0-043fdc15.0"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"043fdc15")," is the commit from which the release is being made. The version will not be saved in the list\nreleases and will not be included in the changelog."),(0,o.kt)("h3",{id:"canary-index"},"Canary index"),(0,o.kt)("p",null,"In the example version ",(0,o.kt)("inlineCode",{parentName:"p"},"1.1.0-043fdc15.0"),", the part after ",(0,o.kt)("inlineCode",{parentName:"p"},"043fdc15.")," is an index and is incremented\nin case of publishing a new canary version with the base version and preid unchanged."))}u.isMDXComponent=!0}}]);