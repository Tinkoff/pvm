"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3379],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||a;return n?o.createElement(d,i(i({ref:t},s),{},{components:n})):o.createElement(d,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1764:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>p,metadata:()=>c,toc:()=>s,default:()=>u});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"functionality",title:"Supported functionality"},p=void 0,c={unversionedId:"book/get-started/functionality",id:"book/get-started/functionality",isDocsHomePage:!1,title:"Supported functionality",description:"General",source:"@site/docs/book/get-started/functionality.md",sourceDirName:"book/get-started",slug:"/book/get-started/functionality",permalink:"/pvm/docs/book/get-started/functionality",tags:[],version:"current",frontMatter:{id:"functionality",title:"Supported functionality"},sidebar:"book",previous:{title:"\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 pvm ?",permalink:"/pvm/docs/book/get-started/overview"},next:{title:"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430",permalink:"/pvm/docs/book/get-started/installation"}},s=[{value:"General",id:"general",children:[],level:3},{value:"Monorepository",id:"monorepository",children:[],level:3}],m={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"general"},"General"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Automatic raising of the package version, saving it and publishing with the new version"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/modules/pvm_notifications"},"Notification")," about the publication result"),(0,a.kt)("li",{parentName:"ol"},"Generate ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#changelog"},"changelog")," and save it"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#versioning"},"Possibility")," to saving the version without additional commit to the repository"),(0,a.kt)("li",{parentName:"ol"},"Ability to set ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#publish"},"alternative path")," before the published package"),(0,a.kt)("li",{parentName:"ol"},"Support for different versioning schemes (",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/modules/pvm_plugin_conventional_semantic_release"},"semantic-release"),", ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/modules/pvm_plugin_conventional_changelog"},"conventional-commit"),")"),(0,a.kt)("li",{parentName:"ol"},"Extensibility through plugins"),(0,a.kt)("li",{parentName:"ol"},"Preliminary output of the result of future changes to evaluate the correctness through the support of the ",(0,a.kt)("inlineCode",{parentName:"li"},"--dry-run")," flag by most commands"),(0,a.kt)("li",{parentName:"ol"},"Ability to locally execute commands without writing to external services through the commands ",(0,a.kt)("inlineCode",{parentName:"li"},"pvm local <command>")," (list of commands - ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn pvm local --help"),")"),(0,a.kt)("li",{parentName:"ol"},"Integration with code storage platforms (",(0,a.kt)("a",{parentName:"li",href:"api/modules/pvm_plugin_gitlab.md"},"gitlab"),", ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/modules/pvm_plugin_github"},"github"),")")),(0,a.kt)("h3",{id:"monorepository"},"Monorepository"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Updating modified packages ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#update"},"taking into account dependencies")," between them"),(0,a.kt)("li",{parentName:"ol"},"Guaranteed version synchronization in monorepa package dependencies"),(0,a.kt)("li",{parentName:"ol"},"Ability to set ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/book/versioning/version-placeholders"},"single version")," packages for some or all packages in the repository"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#publish"},"Disable publishing")," for some packages"),(0,a.kt)("li",{parentName:"ol"},"Ability to manually override the release type (major, minor, patch, none) for one or a group of packages"),(0,a.kt)("li",{parentName:"ol"},"Support for generating ",(0,a.kt)("a",{parentName:"li",href:"/pvm/docs/api/interfaces/pvm_core.Config#changelog"},"individual changelog")," for each package")))}u.isMDXComponent=!0}}]);