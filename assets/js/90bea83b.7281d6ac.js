"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5362],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),p=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},s=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(t),m=r,d=s["".concat(c,".").concat(m)]||s[m]||f[m]||o;return t?i.createElement(d,a(a({ref:n},u),{},{components:t})):i.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7742:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>l,contentTitle:()=>c,metadata:()=>p,toc:()=>u,default:()=>s});var i=t(7462),r=t(3366),o=(t(7294),t(3905)),a=["components"],l={id:"configuration",title:"Configuration"},c=void 0,p={unversionedId:"config/configuration",id:"config/configuration",isDocsHomePage:!1,title:"Configuration",description:"Config schema",source:"@site/docs/config/config.md",sourceDirName:"config",slug:"/config/configuration",permalink:"/pvm/docs/config/configuration",tags:[],version:"current",frontMatter:{id:"configuration",title:"Configuration"},sidebar:"Configuration",next:{title:"Env",permalink:"/pvm/docs/api/interfaces/pvm_types.Env"}},u=[{value:"Config schema",id:"config-schema",children:[],level:2},{value:"Configuration sources",id:"configuration-sources",children:[{value:"Project-level configuration file",id:"project-level-configuration-file",children:[],level:3},{value:"Default builtin values",id:"default-builtin-values",children:[],level:3},{value:"Env variables with <code>PVM_CONFIG_</code> prefix",id:"env-variables-with-pvm_config_-prefix",children:[],level:3},{value:"Plugins with config extension",id:"plugins-with-config-extension",children:[],level:3}],level:2},{value:"Sources priority (from most prioritized)",id:"sources-priority-from-most-prioritized",children:[],level:2}],f={toc:u};function s(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"config-schema"},(0,o.kt)("a",{parentName:"h2",href:"/pvm/docs/api/interfaces/pvm_types.Config"},"Config schema")),(0,o.kt)("h2",{id:"configuration-sources"},"Configuration sources"),(0,o.kt)("h3",{id:"project-level-configuration-file"},"Project-level configuration file"),(0,o.kt)("p",null,"Config file name should be ",(0,o.kt)("inlineCode",{parentName:"p"},".pvm")," and extension should be one of the following: ",(0,o.kt)("inlineCode",{parentName:"p"},".json"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".json5"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".toml"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".js")," if configuration\nshould be dynamically calculated."),(0,o.kt)("p",null,".toml example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"[versioning]\nunified = true\nsource = 'tag'\n")),(0,o.kt)("p",null,".js example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {  \n  // config goes here\n}\n")),(0,o.kt)("h3",{id:"default-builtin-values"},(0,o.kt)("a",{parentName:"h3",href:"/pvm/docs/config/configuration_defaults"},"Default builtin values")),(0,o.kt)("h3",{id:"env-variables-with-pvm_config_-prefix"},"Env variables with ",(0,o.kt)("inlineCode",{parentName:"h3"},"PVM_CONFIG_")," prefix"),(0,o.kt)("p",null,"For each variable prefix will be remove and rest part of name will be transformed to lower case. Double dashes ",(0,o.kt)("inlineCode",{parentName:"p"},"__")," will be converted to ",(0,o.kt)("inlineCode",{parentName:"p"},".")," in result path."),(0,o.kt)("p",null,"Example:\nEnv ",(0,o.kt)("inlineCode",{parentName:"p"},"PVM_CONFIG_PUBLISH__CLI_ARGS")," will set value in config by following path ",(0,o.kt)("inlineCode",{parentName:"p"},"publish.cli_args")),(0,o.kt)("h3",{id:"plugins-with-config-extension"},"Plugins with config extension"),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { declarePlugin } from '@pvm/di'\n\nexport default declarePlugin({\n  configExt: {\n    mark_pr: {\n      analyze_update: true,\n    },\n  },\n})\n\n")),(0,o.kt)("h2",{id:"sources-priority-from-most-prioritized"},"Sources priority (from most prioritized)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Env variables with ",(0,o.kt)("inlineCode",{parentName:"li"},"PVM_CONFIG_")," prefix"),(0,o.kt)("li",{parentName:"ul"},"Project-level configuration file"),(0,o.kt)("li",{parentName:"ul"},"Plugins with CONFIG_EXTENSION_TOKEN provider"),(0,o.kt)("li",{parentName:"ul"},"Default builtin values")))}s.isMDXComponent=!0}}]);