"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9081],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>c});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),o=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),k=o(r),c=a,u=k["".concat(s,".").concat(c)]||k[c]||m[c]||i;return r?n.createElement(u,l(l({ref:t},d),{},{components:r})):n.createElement(u,l({ref:t},d))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=r[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},9598:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>p,contentTitle:()=>s,metadata:()=>o,toc:()=>d,default:()=>k});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],p={id:"pvm_cowners",title:"Module: @pvm/cowners",sidebar_label:"@pvm/cowners",sidebar_position:0,custom_edit_url:null},s="@pvm/cowners",o={unversionedId:"api/modules/pvm_cowners",id:"api/modules/pvm_cowners",isDocsHomePage:!1,title:"Module: @pvm/cowners",description:"A library for working with CODEOWNERS file.",source:"@site/docs/api/modules/pvm_cowners.md",sourceDirName:"api/modules",slug:"/api/modules/pvm_cowners",permalink:"/pvm/docs/api/modules/pvm_cowners",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"pvm_cowners",title:"Module: @pvm/cowners",sidebar_label:"@pvm/cowners",sidebar_position:0,custom_edit_url:null},sidebar:"API",previous:{title:"@pvm/core",permalink:"/pvm/docs/api/modules/pvm_core"},next:{title:"@pvm/di",permalink:"/pvm/docs/api/modules/pvm_di"}},d=[{value:"Usage",id:"usage",children:[],level:2},{value:"Interfaces",id:"interfaces",children:[{value:"<code>OwnersEntry</code>",id:"ownersentry",children:[],level:3}],level:2},{value:"Api",id:"api",children:[{value:"<code>getGroups(): OwnersGroup[]</code>",id:"getgroups-ownersgroup",children:[],level:3},{value:"<code>affectedGroups(paths: string[]): IterableIterator&lt;OwnersGroup&gt;</code>",id:"affectedgroupspaths-string-iterableiteratorownersgroup",children:[{value:"<code>getOwners(paths: string[]): string[]</code>",id:"getownerspaths-string-string",children:[],level:4},{value:"<code>getMajority(paths: string[], opts: GetMajorityOpts = {}): string[]</code>",id:"getmajoritypaths-string-opts-getmajorityopts---string",children:[{value:"<code>GetMajorityOpts.initial</code>",id:"getmajorityoptsinitial",children:[],level:5},{value:"<code>GetMajorityOpts.exclude</code>",id:"getmajorityoptsexclude",children:[],level:5}],level:4}],level:3},{value:"<code>groupOwnersByMask(paths: string[]): Record&lt;string, string[]&gt;</code>",id:"groupownersbymaskpaths-string-recordstring-string",children:[],level:3}],level:2},{value:"Classes",id:"classes",children:[],level:2},{value:"Interfaces",id:"interfaces-1",children:[],level:2},{value:"Type aliases",id:"type-aliases",children:[{value:"GroupAttributes",id:"groupattributes",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"KvPair",id:"kvpair",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"ValueType",id:"valuetype",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3}],level:2},{value:"Functions",id:"functions",children:[{value:"parseCodeOwners",id:"parsecodeowners",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"parseKvPairs",id:"parsekvpairs",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"parseOwnersLine",id:"parseownersline",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"readCodeOwners",id:"readcodeowners",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"reverseIterator",id:"reverseiterator",children:[{value:"Type parameters",id:"type-parameters",children:[],level:4},{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"selectWithPassion",id:"selectwithpassion",children:[{value:"Type parameters",id:"type-parameters-1",children:[],level:4},{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3}],level:2}],m={toc:d};function k(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pvmcowners"},"@pvm/cowners"),(0,i.kt)("p",null,"A library for working with CODEOWNERS file."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { readCodeOwners } = require('@pvm/cowners')\n\nasync function main() {\n  const codeOwners = await readCodeOwners()\n}\n")),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("h3",{id:"ownersentry"},(0,i.kt)("inlineCode",{parentName:"h3"},"OwnersEntry")),(0,i.kt)("p",null,"Structure which holds each valid line with pattern and owners in CODEWNERS file.\nHere is typescript definition:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface OwnersGroup {\n  attrs: Record<string, string | number | boolean | null>,\n  pattern: string,\n  owners: string[],\n  match(path: string): boolean,\n}\n")),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"attrs")," are being parsed from shebang comments.\nExample shebang comment with all available cases:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#! int=4 str='cat\\'s ball' new=false old=true greet=\"hello world!\" vs=null\n* @owners\n")),(0,i.kt)("h2",{id:"api"},"Api"),(0,i.kt)("h3",{id:"getgroups-ownersgroup"},(0,i.kt)("inlineCode",{parentName:"h3"},"getGroups(): OwnersGroup[]")),(0,i.kt)("p",null,"Returns all OwnersGroups which has been parsed."),(0,i.kt)("h3",{id:"affectedgroupspaths-string-iterableiteratorownersgroup"},(0,i.kt)("inlineCode",{parentName:"h3"},"affectedGroups(paths: string[]): IterableIterator<OwnersGroup>")),(0,i.kt)("p",null,"Returns OwnersGroups which related to given paths."),(0,i.kt)("h4",{id:"getownerspaths-string-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"getOwners(paths: string[]): string[]")),(0,i.kt)("p",null,"Get all owners for given paths."),(0,i.kt)("h4",{id:"getmajoritypaths-string-opts-getmajorityopts---string"},(0,i.kt)("inlineCode",{parentName:"h4"},"getMajority(paths: string[], opts: GetMajorityOpts = {}): string[]")),(0,i.kt)("p",null,"Get majority of owners required for review merge request.\nFor each mask majority is ",(0,i.kt)("inlineCode",{parentName:"p"},"Math.ceil(owners_for_mask / 2)"),"."),(0,i.kt)("h5",{id:"getmajorityoptsinitial"},(0,i.kt)("inlineCode",{parentName:"h5"},"GetMajorityOpts.initial")),(0,i.kt)("p",null,"List if initial reviewers."),(0,i.kt)("h5",{id:"getmajorityoptsexclude"},(0,i.kt)("inlineCode",{parentName:"h5"},"GetMajorityOpts.exclude")),(0,i.kt)("p",null,"List of reviewers which should be excluded from result."),(0,i.kt)("h3",{id:"groupownersbymaskpaths-string-recordstring-string"},(0,i.kt)("inlineCode",{parentName:"h3"},"groupOwnersByMask(paths: string[]): Record<string, string[]>")),(0,i.kt)("p",null,"Get all owners for given paths and group by filename patterns."),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/pvm_cowners.CodeOwners"},"CodeOwners"))),(0,i.kt)("h2",{id:"interfaces-1"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/pvm_cowners.CalcMajorityOpts"},"CalcMajorityOpts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/pvm_cowners.OwnersGroup"},"OwnersGroup"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"groupattributes"},"GroupAttributes"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"GroupAttributes"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"pvm_cowners#valuetype"},(0,i.kt)("inlineCode",{parentName:"a"},"ValueType")),">"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/cowners.ts#L8"},"packages/pvm-cowners/lib/cowners.ts:8")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"kvpair"},"KvPair"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"KvPair"),": [",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"pvm_cowners#valuetype"},(0,i.kt)("inlineCode",{parentName:"a"},"ValueType")),"]"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/kvpairs.ts#L2"},"packages/pvm-cowners/lib/kvpairs.ts:2")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"valuetype"},"ValueType"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ValueType"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/kvpairs.ts#L1"},"packages/pvm-cowners/lib/kvpairs.ts:1")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"parsecodeowners"},"parseCodeOwners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parseCodeOwners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"codeOwners"),"): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/pvm_cowners.OwnersGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"OwnersGroup")),"[]"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"codeOwners")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/pvm_cowners.OwnersGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"OwnersGroup")),"[]"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/cowners.ts#L54"},"packages/pvm-cowners/lib/cowners.ts:54")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parsekvpairs"},"parseKvPairs"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parseKvPairs"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"input"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IterableIterator"),"<",(0,i.kt)("a",{parentName:"p",href:"pvm_cowners#kvpair"},(0,i.kt)("inlineCode",{parentName:"a"},"KvPair")),">"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"input")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IterableIterator"),"<",(0,i.kt)("a",{parentName:"p",href:"pvm_cowners#kvpair"},(0,i.kt)("inlineCode",{parentName:"a"},"KvPair")),">"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/kvpairs.ts#L153"},"packages/pvm-cowners/lib/kvpairs.ts:153")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parseownersline"},"parseOwnersLine"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parseOwnersLine"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"codeOwnerLine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hashbangComments?"),"): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/pvm_cowners.OwnersGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"OwnersGroup"))),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"codeOwnerLine")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"hashbangComments")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/pvm_cowners.OwnersGroup"},(0,i.kt)("inlineCode",{parentName:"a"},"OwnersGroup"))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/cowners.ts#L36"},"packages/pvm-cowners/lib/cowners.ts:36")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"readcodeowners"},"readCodeOwners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readCodeOwners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"cwd?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"../classes/pvm_cowners.CodeOwners"},(0,i.kt)("inlineCode",{parentName:"a"},"CodeOwners"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cwd")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"../classes/pvm_cowners.CodeOwners"},(0,i.kt)("inlineCode",{parentName:"a"},"CodeOwners"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/cowners.ts#L195"},"packages/pvm-cowners/lib/cowners.ts:195")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reverseiterator"},"reverseIterator"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reverseIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"items"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IterableIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"items")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IterableIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/iter.ts#L2"},"packages/pvm-cowners/lib/iter.ts:2")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selectwithpassion"},"selectWithPassion"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"selectWithPassion"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"items"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"sample"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"howMany"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"[]"),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"items")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Iterable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"sample")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Iterable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"howMany")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T"),"[]"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Tinkoff/pvm/tree/master/packages/pvm-cowners/lib/iter.ts#L11"},"packages/pvm-cowners/lib/iter.ts:11")))}k.isMDXComponent=!0}}]);